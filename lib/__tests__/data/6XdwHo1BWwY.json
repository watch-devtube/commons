{"videoId":"6XdwHo1BWwY","tags":["unix","web"],"title":"CDE: Using System Call Interposition to Automatically Create Portable Software Packages","duration":3500,"channelId":"UCtXKDgv1AVoG88PLl8nGXmw","channelTitle":"GoogleTechTalks","recordingDate":1309222476,"description":"Google Tech Talk (more info below)\r\nFebruary 11, 2011\r\n\r\nPresented by Philip Guo.\r\n\r\nABSTRACT\r\n\r\nIt can be painfully difficult to take software that runs on one person's machine and get it to run on another machine.  Online forums and mailing lists are filled with discussions of users' troubles with compiling, installing, and configuring software and their myriad of dependencies.  To eliminate this dependency problem, we created a tool called CDE that uses system call interposition to monitor the execution of x86-Linux programs and package up the Code, Data, and Environment required to run them on other x86-Linux machines, without any installation or configuration.\r\n\r\nCDE is easy to use: Simply prepend any Linux command (or series of commands) with 'cde', and CDE will execute that command, monitor its actions using ptrace, and copy all files it accesses (e.g., executables, libraries, plug-ins, scripts, configuration/data files) into a self-contained package.  Now you can transfer that package to another Linux machine and run that exact same command without installing anything.  In short, if you can run a set of Linux commands on your x86 machine, then CDE enables others to run it on theirs.\r\n\r\nPeople in both academia and industry have used CDE to distribute portable software, demo research prototypes, make their scientific experiments reproducible, run software natively on older Linux distros, and quickly deploy experiments to compute clusters.\r\n\r\nCDE is free and open-source, available here:\r\nhttp://www.stanford.edu/~pgbovine/cdepack.html\r\n\r\nSpeaker Info:\r\n\r\nPhilip Guo. Philip is a 5th-year Ph.D. student in the Computer Science Department at Stanford University.  His research interests are in software reliability, programming languages, and operating systems.","views":13200,"likes":98,"dislikes":1,"satisfaction":201,"comments":14,"creationDate":1528594313,"objectID":"6XdwHo1BWwY"}